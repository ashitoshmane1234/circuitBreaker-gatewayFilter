server:
  port: 8075
  #address: 127.6.6.6

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        - id: emr-service
          uri: http://localhost:8001
          predicates:
            - Path=/s1/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses:
                  - INTERNAL_SERVER_ERROR
                  - BAD_REQUEST
                  - NOT_FOUND
                methods: GET, POST
            - name: CircuitBreaker
              args:
                name: emrServiceCircuitBreaker
                fallbackUri: forward:/fallback/emr

        - id: notification-service
          uri: http://localhost:8002
          predicates:
            - Path=/s2/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses:
                  - INTERNAL_SERVER_ERROR
                  - BAD_REQUEST
                  - NOT_FOUND
            - name: CircuitBreaker
              args:
                name: notificationServiceCircuitBreaker
                fallbackUri: forward:/fallback/notification

        - id: billing-service
          uri: http://localhost:8006
          predicates:
            - Path=/s3/**
        - id: patient-service
          uri: http://localhost:8007
          predicates:
            - Path=/s4/**

      globalcors:
        cors-configurations:
          "[/**]":
            allowed-origins:
              - "*"
            allowed-methods:
              - GET
              - POST
              - PATCH
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers:
              - Authorization
              - Requestor-Type
              - Origin
              - Content-Type
              - Version
            exposed-headers:
              - Authorization
              - Requestor-Type
              - Origin
              - Content-Type
              - Version
            max-age: 3600

      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 1
              burstCapacity: 10
              requestedTokens: 5
            key-resolver: "#{@userKeyResolver}"
      metrics:
        enabled: true
        tags:
          path:
            enabled: true

management:
  endpoints:
    web:
      exposure:
        include:
          - "*"
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true

jwt:
  config:
    enabled: true
    jwk-set:
      url: "https://www.googleapis.com/oauth2/v3/certs"
      key-id: "2c8a20af7fc98f97f44b142b4d5d0884eb0937c4"

resilience4j:
  circuitbreaker:
    instances:
      emrServiceCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
      notificationServiceCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5s

  retry:
    instances:
      emrServiceRetry:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
      notificationServiceRetry:
        maxAttempts: 3
        waitDuration: 1s
